import { combineReducers, createStore, applyMiddleware } from 'redux';
import axios from 'axios';
import thunk from 'redux-thunk'


//////////////////////////////////////////////////////////////////////////
/////////////////////////REDUX - ACTION TYPES/////////////////////////////
//////////////////////////////////////////////////////////////////////////

/////////////////////////PRODUCTS - ACTION TYPES//////////////////////////
const SET_PRODUCTS = 'SET_PRODUCTS'

/////////////////////////USERS- ACTION TYPES//////////////////////////
const SET_USERS = 'SET_USERS'



///////////////////////////////////////////////////////////////////////////
////////////////////////REDUX - ACTION CREATORS////////////////////////////
///////////////////////////////////////////////////////////////////////////

/////////////////////////PRODUCT ACTION CREATORS//////////////////////////
const setProductsAction = (products) => ({ type: SET_PRODUCTS, products })

/////////////////////////USERS ACTION CREATORS//////////////////////////
const setUsersAction = (users) => ({ type: SET_USERS, users })





///////////////////////////////////////////////////////////////////////////
////////////////////////     REDUX - THUNKS    ////////////////////////////
///////////////////////////////////////////////////////////////////////////

////////////////////////     PRODUCT - THUNKS    //////////////////////////


const setProductsThunk = () => {
  return async dispatch => {
    const allProducts = (await axios.get('/api/products')).data;
    dispatch(setProductsAction(allProducts))
  }
}

////////////////////////     USERS - THUNKS    //////////////////////////


const setUsersThunk = () => {
  return async dispatch => {
    const allUsers = (await axios.get('/api/users')).data;
    console.log("THUNKS ", allUsers)
    dispatch(setUsersAction(allUsers))
  }
}



///////////////////////////////////////////////////////////////////////////
////////////////////////     REDUX - REDUCERS    //////////////////////////
///////////////////////////////////////////////////////////////////////////


////////////////////////   REDUX - PRODUCTS REDUCER   ////////////////////

const productReducer = (state = [], action) => {
  if (action.type === SET_PRODUCTS) {
    state = action.products;
  }
  return state;
}

////////////////////////   REDUX - USERS REDUCER   ////////////////////

const userReducer = (state = [], action) => {
  if (action.type === SET_USERS) {
    state = action.users;
  }
  return state;
}



////////////////////////   REDUX - COMBINE REDUCERS    ////////////////////
const reducer = combineReducers({
  products: productReducer,
  users: userReducer
});



//////////////////////////////////////////////////////////////////////////
////////////////////////  REDUX - CREATE STORE  ///////////////////////////
///////////////////////////////////////////////////////////////////////////


//REDUX STORE WITH MIDDLEWARE
const store = createStore(reducer, applyMiddleware(thunk));


export default store;
export { setProductsAction, setUsersAction };
export { setProductsThunk, setUsersThunk };
